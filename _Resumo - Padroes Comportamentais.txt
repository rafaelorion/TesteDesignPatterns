Padrões Comportamentais:

Chain of responsability: Define uma cascata, ao chamar o metodo se houver outra classe para executar a proxima etapa a mesma sera chamada
Command: Encapsula comandos com clientes parametrizados
Interpreter: Usado para definição de linguagem. Define representações para gramáticas e abstrações para análise sintática.
Iterator: Gerencia a interacao dentro de uma colecao
Mediator: Define um objeto que encapsula as interações dentre desse grupo.
Memento: Captura a estado atual de um objeto
Observer: Provê sincronização, coordenação e consistência entre objetos relacionados.
State: Deixa um objeto mudar seu comportamento quando seu estado interno muda, mudando, efetivamente, a classe do objeto. 
Strategy: Injeta uma estrategia para determinada operacao pelo construtor
Template Method: Define o esqueleto de um algoritmo em uma operação.
Visitor: Representa uma operação a ser realizada sobre elementos da estrutura de um objeto. O Visitor permite que se crie um nova operação sem que se mude a classe dos elementos sobre as quais ela opera.


# Chain of Responsability
Encadeia os objetos receptores e transporta a mensagem através da corrente até que um dos objetos a responda. Assim, separa (provê loose coupling) objetos transmissores dos receptores, dando a chance de mais de um objeto poder tratar a mensagem.

# Command
Encapsula uma mensagem como um objeto, de modo que se possa parametrizar clientes com diferentes mensagens. Separa, então, o criador da mensagem do executor da mesma.

# Interpreter
Usado para definição de linguagem. Define representações para gramáticas e abstrações para análise sintática.

# Iterator
Provê um modo de acesso a elementos de um agregado de objetos, sequencialmente, sem exposição de estruturas internas.

# Mediator
Desacopla e gerencia as colaborações entre um grupo de objetos. Define um objeto que encapsula as interações dentre desse grupo.

# Memento
Captura e externaliza o estado interno de um objeto (captura um "snapshot"). O Memento não viola o encapsulamento.

# Observer
Provê sincronização, coordenação e consistência entre objetos relacionados. 

# State
Deixa um objeto mudar seu comportamento quando seu estado interno muda, mudando, efetivamente, a classe do objeto. 

# Strategy
Define uma família de algoritmos, encapsula cada um deles, e torna a escolha de qual usar flexível. O Strategy desacopla os algoritmos dos clientes que os usa.

# Template Method
Define o esqueleto de um algoritmo em uma operação. O Template Method permite que subclasses componham o algoritmo e tenham a possibilidade de redefinir certos passos a serem tomados no processo, sem contudo mudá-lo.

# Visitor
Representa uma operação a ser realizada sobre elementos da estrutura de um objeto. O Visitor permite que se crie um nova operação sem que se mude a classe dos elementos sobre as quais ela opera.
